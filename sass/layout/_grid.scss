@use "../abstracts/variables" as var;
@use "../abstracts/mixins" as mixin;

.row {
  //standard is 1140px, and rem is now 114rem
  max-width: var.$grid-width;
  margin: 0 auto; // trick to center block element

  &:not(:last-child) {
    margin-bottom: var.$gutter-vertical;

    @include mixin.respond(tab-port) {
      margin-bottom: var.$gutter-vertical-small;
    }
  }

  @include mixin.respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  @include mixin.clearfix;

  //^ select any that starts with col
  //* select any class which contain col
  //$ select any that ends with col

  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: var.$gutter-horizontal;

      @include mixin.respond(tab-port) {
        margin-right: 0;
        margin-bottom: var.$gutter-vertical-small;
      }
    }

    @include mixin.respond(tab-port) {
      width: 100% !important;
    }
  }
  .col-1-of-2 {
    width: calc((100% - #{var.$gutter-horizontal}) / 2);
  }
  .col-1-of-3 {
    width: calc((100% - 2 * #{var.$gutter-horizontal}) / 3);
  }
  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{var.$gutter-horizontal}) / 3) + #{var.$gutter-horizontal}
    );
  }
  .col-1-of-4 {
    width: calc((100% - 3 * #{var.$gutter-horizontal}) / 4);
  }
  .col-2-of-4 {
    width: calc(
      (2 * (100% - 3 * #{var.$gutter-horizontal}) / 4) + #{var.$gutter-horizontal}
    );
  }
  .col-3-of-4 {
    width: calc(
      (3 * (100% - 3 * #{var.$gutter-horizontal}) / 4) +
        (2 * #{var.$gutter-horizontal})
    );
  }
}
